// addressing
#define DMEM_START  (0x0000)
#define DMEM_SIZE   (0x1000)
#define DMEM_END    (DMEM_START + DMEM_SIZE)
#define IMEM_START  (DMEM_END)
#define IMEM_SIZE   (0x1000)
#define IMEM_END    (IMEM_START + IMEM_SIZE)

#define DMEM_START_VIRT (0x04000000 | DMEM_START)
#define IMEM_START_VIRT (0x04000000 | IMEM_START)
#define DMEM_END_VIRT   (0x04000000 | DMEM_END)
#define IMEM_END_VIRT   (0x04000000 | IMEM_END)

#define RSPBOOT_ENTRYPOINT      (IMEM_START + 0x80)
#define RSPBOOT_ENTRYPOINT_VIRT (0x04000000 | RSPBOOT_ENTRYPOINT)

// OSTask structure
.definelabel OSTask_addr, DMEM_END - 0x40/*sizeof(OSTask)*/

OS_TASK_OFF_TYPE       equ 0x00
OS_TASK_OFF_FLAGS      equ 0x04
OS_TASK_OFF_UBOOT      equ 0x08
OS_TASK_OFF_UBOOT_SZ   equ 0x0C
OS_TASK_OFF_UCODE      equ 0x10
OS_TASK_OFF_UCODE_SZ   equ 0x14
OS_TASK_OFF_UDATA      equ 0x18
OS_TASK_OFF_UDATA_SZ   equ 0x1C
OS_TASK_OFF_STACK      equ 0x20
OS_TASK_OFF_STACK_SZ   equ 0x24
OS_TASK_OFF_OUTBUFF    equ 0x28
OS_TASK_OFF_OUTBUFF_SZ equ 0x2C
OS_TASK_OFF_DATA       equ 0x30
OS_TASK_OFF_DATA_SZ    equ 0x34
OS_TASK_OFF_YIELD      equ 0x38
OS_TASK_OFF_YIELD_SZ   equ 0x3C

// OSTask flags
OS_TASK_YIELDED  equ 0x0001
OS_TASK_DP_WAIT  equ 0x0002
OS_TASK_LOADABLE equ 0x0004
OS_TASK_SP_ONLY  equ 0x0008
OS_TASK_USR0     equ 0x0010
OS_TASK_USR1     equ 0x0020
OS_TASK_USR2     equ 0x0040
OS_TASK_USR3     equ 0x0080
