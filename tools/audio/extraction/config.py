# config.py
# SPDX-FileCopyrightText: Â© 2024 ZeldaRET
# SPDX-License-Identifier: CC0-1.0
#
#
#

import os
from enum import Enum, auto
from dataclasses import dataclass

from disassemble_sequence import MMLVersion, SqSection

# ======================================================================================================================
#   Globals
# ======================================================================================================================

SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
SAMPLECONV_PATH = f"{SCRIPT_DIR}/../sampleconv/sampleconv"

# ======================================================================================================================
#   Version Info
# ======================================================================================================================

class GameVersion(Enum):
    # OoT
    OOT_NTSC_0_9 = auto(),
    OOT_NTSC_1_0 = auto(),
    OOT_NTSC_1_1 = auto(),
    OOT_NTSC_1_2 = auto(),
    OOT_NTSC_1_2_GW = auto(),
    OOT_PAL_1_0 = auto(),
    OOT_PAL_1_1 = auto(),
    OOT_GC_JP = auto(),
    OOT_GC_JP_CE = auto(),
    OOT_GC_JP_MQ = auto(),
    OOT_GC_US = auto(),
    OOT_GC_US_MQ = auto(),
    OOT_GC_EU = auto(),
    OOT_GC_EU_DBG0 = auto(),
    OOT_GC_EU_DBG1 = auto(),
    OOT_GC_EU_MQ = auto(),
    OOT_GC_EU_MQ_DBG = auto(),
    OOT_IQUE_CN = auto(),
    OOT_IQUE_ZH = auto(),
    # MM
    MM_N64_JP_1_0 = auto(),
    MM_N64_JP_1_1 = auto(),
    MM_N64_US = auto(),
    MM_N64_US_DEMO = auto(),
    MM_N64_US_GW = auto(),
    MM_N64_EU_1_0 = auto(),
    MM_N64_EU_1_1 = auto(),
    MM_N64_EU_1_1_VC = auto(),
    MM_N64_EU_1_1_DBG = auto(),
    MM_GC_JP = auto(),
    MM_GC_US = auto(),
    MM_GC_EU = auto(),

GAMEVERSION_ALL_OOT = (
    GameVersion.OOT_NTSC_0_9,
    GameVersion.OOT_NTSC_1_0,
    GameVersion.OOT_NTSC_1_1,
    GameVersion.OOT_NTSC_1_2,
    GameVersion.OOT_NTSC_1_2_GW,
    GameVersion.OOT_PAL_1_0,
    GameVersion.OOT_PAL_1_1,
    GameVersion.OOT_GC_JP,
    GameVersion.OOT_GC_JP_CE,
    GameVersion.OOT_GC_JP_MQ,
    GameVersion.OOT_GC_US,
    GameVersion.OOT_GC_US_MQ,
    GameVersion.OOT_GC_EU,
    GameVersion.OOT_GC_EU_DBG0,
    GameVersion.OOT_GC_EU_DBG1,
    GameVersion.OOT_GC_EU_MQ,
    GameVersion.OOT_GC_EU_MQ_DBG,
    GameVersion.OOT_IQUE_CN,
    GameVersion.OOT_IQUE_ZH,
)
GAMEVERSION_ALL_MM  = (
    GameVersion.MM_N64_JP_1_0,
    GameVersion.MM_N64_JP_1_1,
    GameVersion.MM_N64_US,
    GameVersion.MM_N64_US_DEMO,
    GameVersion.MM_N64_US_GW,
    GameVersion.MM_N64_EU_1_0,
    GameVersion.MM_N64_EU_1_1,
    GameVersion.MM_N64_EU_1_1_VC,
    GameVersion.MM_N64_EU_1_1_DBG,
    GameVersion.MM_GC_JP,
    GameVersion.MM_GC_US,
    GameVersion.MM_GC_EU,
)

@dataclass
class GameVersionInfo:
    version_id        : GameVersion # Game Version Identifier
    mml_version       : MMLVersion # Music Macro Language Version

    audiobank_rom     : int # Audiobank vrom start
    audioseq_rom      : int # Audioseq vrom start
    audiotable_rom    : int # Audiotable vrom start
    soundfont_table   : int # Soundfont table vrom start
    seq_font_table    : int # Sequence font table vrom start
    seq_table         : int # Sequence table vrom start
    sample_bank_table : int # Sample bank table vrom start

VERSION_TABLE = {
    # OoT
  # "oot-ntsc-0.9"      :   GameVersionInfo(GameVersion.OOT_NTSC_0_9, MMLVersion.OOT,
    "oot-ntsc-1.0"      :   GameVersionInfo(GameVersion.OOT_NTSC_1_0, MMLVersion.OOT,
                                            0x0D390, 0x29DE0, 0x79470, 0xB896A0, 0xB89910, 0xB89AD0, 0xB8A1C0),
  # "oot-ntsc-1.1"      :   GameVersionInfo(GameVersion.OOT_NTSC_1_1, MMLVersion.OOT,
  # "oot-ntsc-1.2"      :   GameVersionInfo(GameVersion.OOT_NTSC_1_2, MMLVersion.OOT,
  # "oot-ntsc-1.2-gw"   :   GameVersionInfo(GameVersion.OOT_NTSC_1_2_GW, MMLVersion.OOT,
  # "oot-pal-1.0"       :   GameVersionInfo(GameVersion.OOT_PAL_1_0, MMLVersion.OOT,
  # "oot-pal-1.1"       :   GameVersionInfo(GameVersion.OOT_PAL_1_1, MMLVersion.OOT,
  # "oot-gc-jp"         :   GameVersionInfo(GameVersion.OOT_GC_JP, MMLVersion.OOT,
  # "oot-gc-jp-ce"      :   GameVersionInfo(GameVersion.OOT_GC_JP_CE, MMLVersion.OOT,
  # "oot-gc-jp-mq"      :   GameVersionInfo(GameVersion.OOT_GC_JP_MQ, MMLVersion.OOT,
    "oot-gc-us"         :   GameVersionInfo(GameVersion.OOT_GC_US, MMLVersion.OOT,
                                            0x0D0C0, 0x38E80, 0x88900, 0xB87DA0, 0xB88010, 0xB881D0, 0xB888C0),
  # "oot-gc-us-mq"      :   GameVersionInfo(GameVersion.OOT_GC_US_MQ, MMLVersion.OOT,
    "oot-gc-eu"         :   GameVersionInfo(GameVersion.OOT_GC_EU, MMLVersion.OOT,
                                            0x0D0D0, 0x38E90, 0x88910, 0xB87590, 0xB87800, 0xB879C0, 0xB880B0),
  # "oot-gc-eu-dbg0"    :   GameVersionInfo(GameVersion.OOT_GC_EU_DBG0, MMLVersion.OOT,
  # "oot-gc-eu-dbg1"    :   GameVersionInfo(GameVersion.OOT_GC_EU_DBG1, MMLVersion.OOT,
    "oot-gc-eu-mq"      :   GameVersionInfo(GameVersion.OOT_GC_EU_MQ, MMLVersion.OOT,
                                            0x0D0D0, 0x38E90, 0x88910, 0xB87570, 0xB877E0, 0xB879A0, 0xB88090),
    "oot-gc-eu-mq-dbg"  :   GameVersionInfo(GameVersion.OOT_GC_EU_MQ_DBG, MMLVersion.OOT,
                                            0x19030, 0x44DF0, 0x94870, 0xBCC270, 0xBCC4E0, 0xBCC6A0, 0xBCCD90),
  # "oot-ique-cn"       :   GameVersionInfo(GameVersion.OOT_IQUE_CN, MMLVersion.OOT,
  # "oot-ique-zh"       :   GameVersionInfo(GameVersion.OOT_IQUE_ZH, MMLVersion.OOT,
    # MM
    "mm-n64-jp-1.0"     :   GameVersionInfo(GameVersion.MM_N64_JP_1_0, MMLVersion.MM,
                                            0x222F0, 0x48160, 0x995D0, 0xC97130, 0xC973C0, 0xC975D0, 0xC97DE0),
  # "mm-n64-jp-1.1"         GameVersionInfo(GameVersion.MM_N64_JP_1_1, MMLVersion.MM,
    "mm-n64-us"         :   GameVersionInfo(GameVersion.MM_N64_US, MMLVersion.MM,
                                            0x20700, 0x46AF0, 0x97F70, 0xC776C0, 0xC77960, 0xC77B70, 0xC78380),
  # "mm-n64-us-demo"    :   GameVersionInfo(GameVersion.MM_N64_US_DEMO, MMLVersion.MM,
  # "mm-n64-us-gw"      :   GameVersionInfo(GameVersion.MM_N64_US_GW, MMLVersion.MM,
  # "mm-n64-eu-1.0"     :   GameVersionInfo(GameVersion.MM_N64_EU_1_0, MMLVersion.MM,
  # "mm-n64-eu-1.1"     :   GameVersionInfo(GameVersion.MM_N64_EU_1_1, MMLVersion.MM,
  # "mm-n64-eu-1.1-vc"  :   GameVersionInfo(GameVersion.MM_N64_EU_1_1_VC, MMLVersion.MM,
    "mm-n64-eu-1.1-dbg" :   GameVersionInfo(GameVersion.MM_N64_EU_1_1_DBG, MMLVersion.MM,
                                            0x2B2D0, 0x516C0, 0xA2B40, 0xE0F7E0, 0xE0FA80, 0xE0FC90, 0xE104A0),
  # "mm-gc-jp"          :   GameVersionInfo(GameVersion.MM_GC_JP, MMLVersion.MM,
  # "mm-gc-us"          :   GameVersionInfo(GameVersion.MM_GC_US, MMLVersion.MM,
  # "mm-gc-eu"          :   GameVersionInfo(GameVersion.MM_GC_EU, MMLVersion.MM,
}

#
#   Sequence Enum Names
#

SEQ_NAMES_OOT = (
    "NA_BGM_GENERAL_SFX",
    "NA_BGM_NATURE_AMBIENCE",
    "NA_BGM_FIELD_LOGIC",
    "NA_BGM_FIELD_INIT",
    "NA_BGM_FIELD_DEFAULT_1",
    "NA_BGM_FIELD_DEFAULT_2",
    "NA_BGM_FIELD_DEFAULT_3",
    "NA_BGM_FIELD_DEFAULT_4",
    "NA_BGM_FIELD_DEFAULT_5",
    "NA_BGM_FIELD_DEFAULT_6",
    "NA_BGM_FIELD_DEFAULT_7",
    "NA_BGM_FIELD_DEFAULT_8",
    "NA_BGM_FIELD_DEFAULT_9",
    "NA_BGM_FIELD_DEFAULT_A",
    "NA_BGM_FIELD_DEFAULT_B",
    "NA_BGM_FIELD_ENEMY_INIT",
    "NA_BGM_FIELD_ENEMY_1",
    "NA_BGM_FIELD_ENEMY_2",
    "NA_BGM_FIELD_ENEMY_3",
    "NA_BGM_FIELD_ENEMY_4",
    "NA_BGM_FIELD_STILL_1",
    "NA_BGM_FIELD_STILL_2",
    "NA_BGM_FIELD_STILL_3",
    "NA_BGM_FIELD_STILL_4",
    "NA_BGM_DUNGEON",
    "NA_BGM_KAKARIKO_ADULT",
    "NA_BGM_ENEMY",
    "NA_BGM_BOSS",
    "NA_BGM_INSIDE_DEKU_TREE",
    "NA_BGM_MARKET",
    "NA_BGM_TITLE",
    "NA_BGM_LINK_HOUSE",
    "NA_BGM_GAME_OVER",
    "NA_BGM_BOSS_CLEAR",
    "NA_BGM_ITEM_GET",
    "NA_BGM_OPENING_GANON",
    "NA_BGM_HEART_GET",
    "NA_BGM_OCA_LIGHT",
    "NA_BGM_JABU_JABU",
    "NA_BGM_KAKARIKO_KID",
    "NA_BGM_GREAT_FAIRY",
    "NA_BGM_ZELDA_THEME",
    "NA_BGM_FIRE_TEMPLE",
    "NA_BGM_OPEN_TRE_BOX",
    "NA_BGM_FOREST_TEMPLE",
    "NA_BGM_COURTYARD",
    "NA_BGM_GANON_TOWER",
    "NA_BGM_LONLON",
    "NA_BGM_GORON_CITY",
    "NA_BGM_FIELD_MORNING",
    "NA_BGM_SPIRITUAL_STONE",
    "NA_BGM_OCA_BOLERO",
    "NA_BGM_OCA_MINUET",
    "NA_BGM_OCA_SERENADE",
    "NA_BGM_OCA_REQUIEM",
    "NA_BGM_OCA_NOCTURNE",
    "NA_BGM_MINI_BOSS",
    "NA_BGM_SMALL_ITEM_GET",
    "NA_BGM_TEMPLE_OF_TIME",
    "NA_BGM_EVENT_CLEAR",
    "NA_BGM_KOKIRI",
    "NA_BGM_OCA_FAIRY_GET",
    "NA_BGM_SARIA_THEME",
    "NA_BGM_SPIRIT_TEMPLE",
    "NA_BGM_HORSE",
    "NA_BGM_HORSE_GOAL",
    "NA_BGM_INGO",
    "NA_BGM_MEDALLION_GET",
    "NA_BGM_OCA_SARIA",
    "NA_BGM_OCA_EPONA",
    "NA_BGM_OCA_ZELDA",
    "NA_BGM_OCA_SUNS",
    "NA_BGM_OCA_TIME",
    "NA_BGM_OCA_STORM",
    "NA_BGM_NAVI_OPENING",
    "NA_BGM_DEKU_TREE_CS",
    "NA_BGM_WINDMILL",
    "NA_BGM_HYRULE_CS",
    "NA_BGM_MINI_GAME",
    "NA_BGM_SHEIK",
    "NA_BGM_ZORA_DOMAIN",
    "NA_BGM_APPEAR",
    "NA_BGM_ADULT_LINK",
    "NA_BGM_MASTER_SWORD",
    "NA_BGM_INTRO_GANON",
    "NA_BGM_SHOP",
    "NA_BGM_CHAMBER_OF_SAGES",
    "NA_BGM_FILE_SELECT",
    "NA_BGM_ICE_CAVERN",
    "NA_BGM_DOOR_OF_TIME",
    "NA_BGM_OWL",
    "NA_BGM_SHADOW_TEMPLE",
    "NA_BGM_WATER_TEMPLE",
    "NA_BGM_BRIDGE_TO_GANONS",
    "NA_BGM_OCARINA_OF_TIME",
    "NA_BGM_GERUDO_VALLEY",
    "NA_BGM_POTION_SHOP",
    "NA_BGM_KOTAKE_KOUME",
    "NA_BGM_ESCAPE",
    "NA_BGM_UNDERGROUND",
    "NA_BGM_GANONDORF_BOSS",
    "NA_BGM_GANON_BOSS",
    "NA_BGM_END_DEMO",
    "NA_BGM_STAFF_1",
    "NA_BGM_STAFF_2",
    "NA_BGM_STAFF_3",
    "NA_BGM_STAFF_4",
    "NA_BGM_FIRE_BOSS",
    "NA_BGM_TIMED_MINI_GAME",
    "NA_BGM_CUTSCENE_EFFECTS",
)

SEQ_NAMES_MM = (
    "NA_BGM_GENERAL_SFX",
    "NA_BGM_AMBIENCE",
    "NA_BGM_TERMINA_FIELD",
    "NA_BGM_CHASE",
    "NA_BGM_MAJORAS_THEME",
    "NA_BGM_CLOCK_TOWER",
    "NA_BGM_STONE_TOWER_TEMPLE",
    "NA_BGM_INV_STONE_TOWER_TEMPLE",
    "NA_BGM_FAILURE_0",
    "NA_BGM_FAILURE_1",
    "NA_BGM_HAPPY_MASK_SALESMAN",
    "NA_BGM_SONG_OF_HEALING",
    "NA_BGM_SWAMP_REGION",
    "NA_BGM_ALIEN_INVASION",
    "NA_BGM_SWAMP_CRUISE",
    "NA_BGM_SHARPS_CURSE",
    "NA_BGM_GREAT_BAY_REGION",
    "NA_BGM_IKANA_REGION",
    "NA_BGM_DEKU_PALACE",
    "NA_BGM_MOUNTAIN_REGION",
    "NA_BGM_PIRATES_FORTRESS",
    "NA_BGM_CLOCK_TOWN_DAY_1",
    "NA_BGM_CLOCK_TOWN_DAY_2",
    "NA_BGM_CLOCK_TOWN_DAY_3",
    "NA_BGM_FILE_SELECT",
    "NA_BGM_CLEAR_EVENT",
    "NA_BGM_ENEMY",
    "NA_BGM_BOSS",
    "NA_BGM_WOODFALL_TEMPLE",
    "NA_BGM_CLOCK_TOWN_MAIN_SEQUENCE",
    "NA_BGM_OPENING",
    "NA_BGM_INSIDE_A_HOUSE",
    "NA_BGM_GAME_OVER",
    "NA_BGM_CLEAR_BOSS",
    "NA_BGM_GET_ITEM",
    "NA_BGM_CLOCK_TOWN_DAY_2_PTR",
    "NA_BGM_GET_HEART",
    "NA_BGM_TIMED_MINI_GAME",
    "NA_BGM_GORON_RACE",
    "NA_BGM_MUSIC_BOX_HOUSE",
    "NA_BGM_FAIRY_FOUNTAIN",
    "NA_BGM_ZELDAS_LULLABY",
    "NA_BGM_ROSA_SISTERS",
    "NA_BGM_OPEN_CHEST",
    "NA_BGM_MARINE_RESEARCH_LAB",
    "NA_BGM_GIANTS_THEME",
    "NA_BGM_SONG_OF_STORMS",
    "NA_BGM_ROMANI_RANCH",
    "NA_BGM_GORON_VILLAGE",
    "NA_BGM_MAYORS_OFFICE",
    "NA_BGM_OCARINA_EPONA",
    "NA_BGM_OCARINA_SUNS",
    "NA_BGM_OCARINA_TIME",
    "NA_BGM_OCARINA_STORM",
    "NA_BGM_ZORA_HALL",
    "NA_BGM_GET_NEW_MASK",
    "NA_BGM_MINI_BOSS",
    "NA_BGM_GET_SMALL_ITEM",
    "NA_BGM_ASTRAL_OBSERVATORY",
    "NA_BGM_CAVERN",
    "NA_BGM_MILK_BAR",
    "NA_BGM_ZELDA_APPEAR",
    "NA_BGM_SARIAS_SONG",
    "NA_BGM_GORON_GOAL",
    "NA_BGM_HORSE",
    "NA_BGM_HORSE_GOAL",
    "NA_BGM_INGO",
    "NA_BGM_KOTAKE_POTION_SHOP",
    "NA_BGM_SHOP",
    "NA_BGM_OWL",
    "NA_BGM_SHOOTING_GALLERY",
    "NA_BGM_OCARINA_SOARING",
    "NA_BGM_OCARINA_HEALING",
    "NA_BGM_INVERTED_SONG_OF_TIME",
    "NA_BGM_SONG_OF_DOUBLE_TIME",
    "NA_BGM_SONATA_OF_AWAKENING",
    "NA_BGM_GORON_LULLABY",
    "NA_BGM_NEW_WAVE_BOSSA_NOVA",
    "NA_BGM_ELEGY_OF_EMPTINESS",
    "NA_BGM_OATH_TO_ORDER",
    "NA_BGM_SWORD_TRAINING_HALL",
    "NA_BGM_OCARINA_LULLABY_INTRO",
    "NA_BGM_LEARNED_NEW_SONG",
    "NA_BGM_BREMEN_MARCH",
    "NA_BGM_BALLAD_OF_THE_WIND_FISH",
    "NA_BGM_SONG_OF_SOARING",
    "NA_BGM_MILK_BAR_DUPLICATE",
    "NA_BGM_FINAL_HOURS",
    "NA_BGM_MIKAU_RIFF",
    "NA_BGM_MIKAU_FINALE",
    "NA_BGM_FROG_SONG",
    "NA_BGM_OCARINA_SONATA",
    "NA_BGM_OCARINA_LULLABY",
    "NA_BGM_OCARINA_NEW_WAVE",
    "NA_BGM_OCARINA_ELEGY",
    "NA_BGM_OCARINA_OATH",
    "NA_BGM_MAJORAS_LAIR",
    "NA_BGM_OCARINA_LULLABY_INTRO_PTR",
    "NA_BGM_OCARINA_GUITAR_BASS_SESSION",
    "NA_BGM_PIANO_SESSION",
    "NA_BGM_INDIGO_GO_SESSION",
    "NA_BGM_SNOWHEAD_TEMPLE",
    "NA_BGM_GREAT_BAY_TEMPLE",
    "NA_BGM_NEW_WAVE_SAXOPHONE",
    "NA_BGM_NEW_WAVE_VOCAL",
    "NA_BGM_MAJORAS_WRATH",
    "NA_BGM_MAJORAS_INCARNATION",
    "NA_BGM_MAJORAS_MASK",
    "NA_BGM_BASS_PLAY",
    "NA_BGM_DRUMS_PLAY",
    "NA_BGM_PIANO_PLAY",
    "NA_BGM_IKANA_CASTLE",
    "NA_BGM_GATHERING_GIANTS",
    "NA_BGM_KAMARO_DANCE",
    "NA_BGM_CREMIA_CARRIAGE",
    "NA_BGM_KEATON_QUIZ",
    "NA_BGM_END_CREDITS",
    "NA_BGM_OPENING_LOOP",
    "NA_BGM_TITLE_THEME",
    "NA_BGM_DUNGEON_APPEAR",
    "NA_BGM_WOODFALL_CLEAR",
    "NA_BGM_SNOWHEAD_CLEAR",
    "NA_BGM_SEQ_122",
    "NA_BGM_INTO_THE_MOON",
    "NA_BGM_GOODBYE_GIANT",
    "NA_BGM_TATL_AND_TAEL",
    "NA_BGM_MOONS_DESTRUCTION",
    "NA_BGM_END_CREDITS_SECOND_HALF",
)

# ======================================================================================================================
#   Hacks
# ======================================================================================================================

# Some sequences are "handwritten", we don't extract these by default as we want these checked in for documentation.
HANDWRITTEN_SEQUENCES_OOT = (0, 1, 2, 109)
HANDWRITTEN_SEQUENCES_MM  = (0, 1)

# Some bugged soundfonts report the wrong samplebank. Map them to the correct samplebank for proper sample discovery.
FAKE_BANKS = {
    # OoT
    GameVersion.OOT_NTSC_0_9     : { 37 : 2 },
    GameVersion.OOT_NTSC_1_0     : { 37 : 2 },
    GameVersion.OOT_NTSC_1_1     : { 37 : 2 },
    GameVersion.OOT_NTSC_1_2     : { 37 : 2 },
    GameVersion.OOT_NTSC_1_2_GW  : { 37 : 2 },
    GameVersion.OOT_PAL_1_0      : { 37 : 2 },
    GameVersion.OOT_PAL_1_1      : { 37 : 2 },
    GameVersion.OOT_GC_JP        : { 37 : 2 },
    GameVersion.OOT_GC_JP_CE     : { 37 : 2 },
    GameVersion.OOT_GC_JP_MQ     : { 37 : 2 },
    GameVersion.OOT_GC_US        : { 37 : 2 },
    GameVersion.OOT_GC_US_MQ     : { 37 : 2 },
    GameVersion.OOT_GC_EU        : { 37 : 2 },
    GameVersion.OOT_GC_EU_DBG0   : { 37 : 2 },
    GameVersion.OOT_GC_EU_DBG1   : { 37 : 2 },
    GameVersion.OOT_GC_EU_MQ     : { 37 : 2 },
    GameVersion.OOT_GC_EU_MQ_DBG : { 37 : 2 },
    GameVersion.OOT_IQUE_CN      : { 37 : 2 },
    GameVersion.OOT_IQUE_ZH      : { 37 : 2 },
    # MM
    GameVersion.MM_N64_JP_1_0     : { 39 : 2 },
    GameVersion.MM_N64_JP_1_1     : { 40 : 2 },
    GameVersion.MM_N64_US         : { 40 : 2 },
    GameVersion.MM_N64_US_DEMO    : { 40 : 2 },
    GameVersion.MM_N64_US_GW      : { 40 : 2 },
    GameVersion.MM_N64_EU_1_0     : { 40 : 2 },
    GameVersion.MM_N64_EU_1_1     : { 40 : 2 },
    GameVersion.MM_N64_EU_1_1_VC  : { 40 : 2 },
    GameVersion.MM_N64_EU_1_1_DBG : { 40 : 2 },
    GameVersion.MM_GC_JP          : { 40 : 2 },
    GameVersion.MM_GC_US          : { 40 : 2 },
    GameVersion.MM_GC_EU          : { 40 : 2 },
}


# Some audiotable banks have a buffer clearing bug. Indicate which banks suffer from this.
AUDIOTABLE_BUFFER_BUGS = {
    # OoT
    GameVersion.OOT_NTSC_0_9     : (0,),
    GameVersion.OOT_NTSC_1_0     : (0,),
    GameVersion.OOT_NTSC_1_1     : (0,),
    GameVersion.OOT_NTSC_1_2     : (0,),
    GameVersion.OOT_NTSC_1_2_GW  : (0,),
    GameVersion.OOT_PAL_1_0      : (0,),
    GameVersion.OOT_PAL_1_1      : (0,),
    GameVersion.OOT_GC_JP        : (0,),
    GameVersion.OOT_GC_JP_CE     : (0,),
    GameVersion.OOT_GC_JP_MQ     : (0,),
    GameVersion.OOT_GC_US        : (0,),
    GameVersion.OOT_GC_US_MQ     : (0,),
    GameVersion.OOT_GC_EU        : (0,),
    GameVersion.OOT_GC_EU_DBG0   : (0,),
    GameVersion.OOT_GC_EU_DBG1   : (0,),
    GameVersion.OOT_GC_EU_MQ     : (0,),
    GameVersion.OOT_GC_EU_MQ_DBG : (0,),
    GameVersion.OOT_IQUE_CN      : (0,),
    GameVersion.OOT_IQUE_ZH      : (0,),
    # MM
}


# Tables have no clear start and end in a sequence. Mark the locations of all tables that appear in sequences.

SEQ_DISAS_HACKS_OOT = {
    # sequence number : ((start offset, number of entries, addend, section_type), ...)
    0 : (
            (0x00E1, 128, 0, SqSection.CHAN),
            (0x0EE3,  80, 0, SqSection.CHAN),
            (0x16D5, 248, 0, SqSection.CHAN),
            (0x315E, 499, 0, SqSection.CHAN),
            (0x5729,  72, 0, SqSection.CHAN),
            (0x5EE5,   8, 0, SqSection.CHAN),
            (0x5FF2, 128, 0, SqSection.CHAN),
        ),
    1 : (
            (0x0192, 20, 0, SqSection.LAYER),
            (0x01BA, 20, 0, SqSection.LAYER),
            (0x01E2, 20, 0, SqSection.LAYER),
            (0x020A, 20, 0, SqSection.LAYER),
            (0x0232, 20, 1, SqSection.LAYER),
            (0x025A, 20, 1, SqSection.LAYER),
            (0x0282, 20, 1, SqSection.LAYER),
        ),
    2 : (
            (0x00BC, 2, 0, SqSection.SEQ),
            (0x00C0, 2, 0, SqSection.ARRAY),
        ),
    109 : (
            (0x0646, 16, 0, SqSection.CHAN),
        ),
}


SEQ_DISAS_HACKS_MM = {
    # sequence number : ((start offset, number of entries, addend, section_type), ...)
    0 : (
            (0x011E,   8, 0, SqSection.TABLE),
            (0x012E, 464, 0, SqSection.CHAN),
            (0x18B2,  48, 0, SqSection.LAYER),
            (0x1990, 112, 0, SqSection.CHAN),
            (0x23D8,   8, 0, SqSection.TABLE),
            (0x23E8, 464, 0, SqSection.CHAN),
            (0x566E,   8, 0, SqSection.TABLE),
            (0x567E, 733, 0, SqSection.CHAN),
            (0xA4C1,  96, 0, SqSection.CHAN),
            (0xB163,  16, 0, SqSection.CHAN),
            (0xB2FE,   8, 0, SqSection.TABLE),
            (0xB30E, 390, 0, SqSection.CHAN),

        ),
    1 : (
            (0x018A, 20, 0, SqSection.LAYER),
            (0x01B2, 20, 0, SqSection.LAYER),
            (0x01DA, 20, 0, SqSection.LAYER),
            (0x0202, 20, 0, SqSection.LAYER),
            (0x022A, 20, 1, SqSection.LAYER),
            (0x0252, 20, 1, SqSection.LAYER),
            (0x027A, 20, 1, SqSection.LAYER),
        ),
}


SEQ_DISAS_HACKS = {
    # OoT
    GameVersion.OOT_NTSC_0_9     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_NTSC_1_0     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_NTSC_1_1     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_NTSC_1_2     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_NTSC_1_2_GW  : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_PAL_1_0      : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_PAL_1_1      : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_JP        : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_JP_CE     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_JP_MQ     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_US        : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_US_MQ     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_EU        : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_EU_DBG0   : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_EU_DBG1   : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_EU_MQ     : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_GC_EU_MQ_DBG : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_IQUE_CN      : SEQ_DISAS_HACKS_OOT,
    GameVersion.OOT_IQUE_ZH      : SEQ_DISAS_HACKS_OOT,
    # MM
    GameVersion.MM_N64_JP_1_0     : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_JP_1_1     : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_US         : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_US_DEMO    : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_US_GW      : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_EU_1_0     : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_EU_1_1     : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_EU_1_1_VC  : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_N64_EU_1_1_DBG : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_GC_JP          : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_GC_US          : SEQ_DISAS_HACKS_MM,
    GameVersion.MM_GC_EU          : SEQ_DISAS_HACKS_MM,
}
